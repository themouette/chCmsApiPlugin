<?php
/**
 * test file for chCmsParamLocationValidator generated by chCmsApiPlugin
 */

include dirname(__FILE__) . '/../../bootstrap/unit.php';
require_once dirname(__FILE__) . '/../../../../../lib/geocoder/Geocoder.class.php';

$t = new lime_test(9, new lime_output_color());

$t->diag('test empty value');
$v = new chCmsParamLocationValidator(array('required' => false));
$t->is($v->clean(null), null, 'required false is ok');

$t->diag('test required');
$v = new chCmsParamLocationValidator(array('required' => true));
try
{
  $v->clean(null);
  $t->fail('required does not throw exception if no value is provided');
}
catch (sfValidatorError $e)
{
  $t->pass('required option requires a value');
}

$t->diag('test valid value');
$t->is_deeply($v->clean("12 rue des gras, 63000 Clermont ferrand"), array(
    'lat' => 45.7787732,  'long' => 3.0845936), 'default value is overriden by valid value');

$t->diag('test not valid value');
try
{
  $r = $v->clean("kkjsdqmlkj");
  $t->fail('invalid data should throw an exception');
}
catch (sfValidatorError $e)
{
  $t->pass('invalid parameter throw an exception');
  $t->is($e->getMessage(), 'Invalid data "%message%".', 'exception embed expected message');
  $t->is($e->getCode(), 'invalid', 'exception embed expected code "invalid"');
}

try
{
  $v->clean("un");
  $t->fail('invalid data should throw an exception');
}
catch (sfValidatorError $e)
{
  $t->pass('invalid parameter throw an exception');
  $t->is($e->getMessage(), '"%value%" is too short (%min_length% characters min).', 'exception embed expected message');
  $t->is($e->getCode(), 'min_length', 'exception embed expected code "min_length"');
}

